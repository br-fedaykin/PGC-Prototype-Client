package com.brunoarruda.hyperdcpabe.blockchain;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

// cSpell:disable
/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.7.0.
 */

@SuppressWarnings("rawtypes")
public class SmartDCPABEKeys extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50604051610f71380380610f718339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610f0c806100656000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806316aa39e01461005c5780632af4c31e1461021c5780634d75cd40146102425780638da5cb5b1461043a578063c8c76f061461045e575b600080fd5b61021a6004803603608081101561007257600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561009c57600080fd5b8201836020820111156100ae57600080fd5b803590602001918460018302840111600160201b831117156100cf57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561012157600080fd5b82018360208201111561013357600080fd5b803590602001918460018302840111600160201b8311171561015457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156101a657600080fd5b8201836020820111156101b857600080fd5b803590602001918460018302840111600160201b831117156101d957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061048d945050505050565b005b61021a6004803603602081101561023257600080fd5b50356001600160a01b03166105df565b6102f66004803603604081101561025857600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561028257600080fd5b82018360208201111561029457600080fd5b803590602001918460018302840111600160201b831117156102b557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061064a945050505050565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561033b578181015183820152602001610323565b50505050905090810190601f1680156103685780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b8381101561039b578181015183820152602001610383565b50505050905090810190601f1680156103c85780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b838110156103fb5781810151838201526020016103e3565b50505050905090810190601f1680156104285780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b610442610a0e565b604080516001600160a01b039092168252519081900360200190f35b61021a6004803603604081101561047457600080fd5b50803560ff1690602001356001600160a01b0316610a1d565b60025460408051631c2353e160e01b81526001600160a01b03878116600483015291519190921691631c2353e1916024808301926020929190829003018186803b1580156104da57600080fd5b505afa1580156104ee573d6000803e3d6000fd5b505050506040513d602081101561050457600080fd5b505161054d576040805162461bcd60e51b815260206004820152601360248201527218d95c9d1a599a595c881b9bdd08199bdd5b99606a1b604482015290519081900360640190fd5b610555610dba565b600080602085518161056357fe5b06905061056e610dba565b600080602087518161057c57fe5b06905060208801518652604088015160208701526060880151604087015260808801519450602087015183526040870151602084015260608701516040840152608087015191506105d38a8a888888888888610ace565b50505050505050505050565b6000546001600160a01b031633146106285760405162461bcd60e51b8152600401808060200182810382526036815260200180610ea26036913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6060806060600060046000876001600160a01b03166001600160a01b03168152602001908152602001600020856040518082805190602001908083835b602083106106a65780518252601f199092019160209182019101610687565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003909101842080546001808301546002840154915460038501546370751f5b60e01b8a52600881901b60ff191660048b0152600160f81b900460ff1660248a015294519398508c979296509450926001600160a01b0316916370751f5b91604480820192600092909190829003018186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561078857600080fd5b810190808051600160201b81111561079f57600080fd5b820160208101848111156107b257600080fd5b8151600160201b8111828201871017156107cb57600080fd5b50509291905050506040516020018085815260200184815260200183815260200182805190602001908083835b602083106108175780518252601f1990920191602091820191016107f8565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052826004016000015483600401600101548460040160020154600160009054906101000a90046001600160a01b03166001600160a01b03166370751f5b8760040160030160009054906101000a900460081b88600401600301601f9054906101000a900460ff166040518363ffffffff1660e01b8152600401808360ff191660ff191681526020018260ff1660ff1681526020019250505060006040518083038186803b1580156108fd57600080fd5b505afa158015610911573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561093a57600080fd5b810190808051600160201b81111561095157600080fd5b8201602081018481111561096457600080fd5b8151600160201b81118282018710171561097d57600080fd5b50509291905050506040516020018085815260200184815260200183815260200182805190602001908083835b602083106109c95780518252601f1990920191602091820191016109aa565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052935093509350509250925092565b6000546001600160a01b031681565b6000546001600160a01b03163314610a665760405162461bcd60e51b8152600401808060200182810382526036815260200180610ea26036913960400191505060405180910390fd5b6005826005811115610a7457fe5b1415610a9a57600180546001600160a01b0319166001600160a01b038316179055610aca565b6000826005811115610aa857fe5b1415610aca57600280546001600160a01b0319166001600160a01b0383161790555b5050565b610ad6610dd8565b506040805160a0810182528751815260208089015190820152878201519181019190915260ff198616606082015260ff85166080820152610b15610dd8565b506040805160a0810182528551815260208087015181830152868301518284015260ff198616606083015260ff851660808301526001600160a01b038c1660009081526004825283812093518c519394919391928d9282918401908083835b60208310610b935780518252601f199092019160209182019101610b74565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205492909214159150610c739050576001600160a01b038a1660009081526003602090815260408220805460018101808355918452928290208c519193610c0a93910191908d0190610e06565b505060025460408051632751228160e01b81526001600160a01b038d8116600483015291519190921691632751228191602480830192600092919082900301818387803b158015610c5a57600080fd5b505af1158015610c6e573d6000803e3d6000fd5b505050505b604051806040016040528083815260200182815250600460008c6001600160a01b03166001600160a01b031681526020019081526020016000208a6040518082805190602001908083835b60208310610cdd5780518252601f199092019160209182019101610cbe565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094208551805182558083015160018301558086015160028301556060808201516003840180546080948501516001600160f81b036001600160f81b0319928316600895861c178116600160f81b60ff9384168102919091179094559b88015180516004890155978801516005880155998701516006870155928601516007909501805496909401519590921693901c929092179096169190941690930292909217909255505050505050505050505050565b60405180606001604052806003906020820280388339509192915050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e4757805160ff1916838001178555610e74565b82800160010185558215610e74579182015b82811115610e74578251825591602001919060010190610e59565b50610e80929150610e84565b5090565b610e9e91905b80821115610e805760008155600101610e8a565b9056fe4f7065726174696f6e206e6f7420616c6c6f7765642e2055736572206d7573742062652074686520636f6e7472616374206f776e6572a265627a7a72305820a2ba22a1f5ba2f8e17cd74a7df6eb59f58453d7f7743bb2f865a72749882dbb564736f6c634300050a0032";

    public static final String FUNC_ADDPUBLICKEY = "addPublicKey";

    public static final String FUNC_CHANGEOWNERSHIP = "changeOwnership";

    public static final String FUNC_GETPUBLICKEY = "getPublicKey";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_SETCONTRACTDEPENDENCIES = "setContractDependencies";

    @Deprecated
    protected SmartDCPABEKeys(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SmartDCPABEKeys(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected SmartDCPABEKeys(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected SmartDCPABEKeys(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> addPublicKey(String addr, String name, byte[] eg1g1ai, byte[] g1yi) {
        final Function function = new Function(
                FUNC_ADDPUBLICKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addr),
                new org.web3j.abi.datatypes.Utf8String(name),
                new org.web3j.abi.datatypes.DynamicBytes(eg1g1ai),
                new org.web3j.abi.datatypes.DynamicBytes(g1yi)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> changeOwnership(String newOwner) {
        final Function function = new Function(
                FUNC_CHANGEOWNERSHIP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple3<String, byte[], byte[]>> getPublicKey(String addr, String name) {
        final Function function = new Function(FUNC_GETPUBLICKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addr),
                new org.web3j.abi.datatypes.Utf8String(name)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        return new RemoteFunctionCall<Tuple3<String, byte[], byte[]>>(function,
                new Callable<Tuple3<String, byte[], byte[]>>() {
                    @Override
                    public Tuple3<String, byte[], byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, byte[], byte[]>(
                                (String) results.get(0).getValue(),
                                (byte[]) results.get(1).getValue(),
                                (byte[]) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> owner() {
        final Function function = new Function(FUNC_OWNER,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> setContractDependencies(BigInteger contractType, String addr) {
        final Function function = new Function(
                FUNC_SETCONTRACTDEPENDENCIES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint8(contractType),
                new org.web3j.abi.datatypes.Address(160, addr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static SmartDCPABEKeys load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SmartDCPABEKeys(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static SmartDCPABEKeys load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SmartDCPABEKeys(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static SmartDCPABEKeys load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new SmartDCPABEKeys(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static SmartDCPABEKeys load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new SmartDCPABEKeys(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<SmartDCPABEKeys> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String root) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, root)));
        return deployRemoteCall(SmartDCPABEKeys.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<SmartDCPABEKeys> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String root) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, root)));
        return deployRemoteCall(SmartDCPABEKeys.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<SmartDCPABEKeys> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String root) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, root)));
        return deployRemoteCall(SmartDCPABEKeys.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<SmartDCPABEKeys> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String root) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, root)));
        return deployRemoteCall(SmartDCPABEKeys.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
